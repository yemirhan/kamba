// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Colors {
  SLATE      @map("#25262b")
  GRAY       @map("#868e96")
  RED        @map("#fa5252")
  PINK       @map("#e64980")
  PURPLE     @map("#be4bdb")
  VIOLET     @map("#7950f2")
  DARKBLUE   @map("#4c6ef5")
  BLUE       @map("#228be6")
  TURQUOISE  @map("#15aabf")
  OCEAN      @map("#12b886")
  GREEN      @map("#40c057")
  LIGHTGREEN @map("#82c91e")
  YELLOW     @map("#fab005")
  ORANGE     @map("#fd7e14")
}

model Status {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  boards    Board[]
  item      Item[]
}

model Board {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  slug        String
  users       User[]
  statuses    Status[]
  items       Item[]
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  @@unique([slug, workspaceId])
  @@index([workspaceId])
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  text      String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  personal  Boolean  @default(false)
  images    Image[]

  @@index([itemId])
  @@index([userId])
}

model Item {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  slug        String    @unique
  board       Board     @relation(fields: [boardId], references: [id])
  boardId     String
  status      Status    @relation(fields: [statusId], references: [id])
  statusId    String
  assignees   User[]
  startDate   DateTime?
  endDate     DateTime?
  description String?
  comments    Comment[]
  images      Image[]

  @@index([boardId])
  @@index([statusId])
}

model Image {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  url       String
  item      Item?    @relation(fields: [itemId], references: [id])
  itemId    String?
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  externalId    String?     @unique
  onboarded     Boolean     @default(false)
  image         String?     @default("https://media.istockphoto.com/id/1288129985/vector/missing-image-of-a-person-placeholder.jpg?s=612x612&w=0&k=20&c=9kE777krx5mrFHsxx02v60ideRWvIgI1RWzR1X4MG2Y=")
  bio           String?
  avatar        String?     @default("https://media.istockphoto.com/id/1288129985/vector/missing-image-of-a-person-placeholder.jpg?s=612x612&w=0&k=20&c=9kE777krx5mrFHsxx02v60ideRWvIgI1RWzR1X4MG2Y=")
  accounts      Account[]
  sessions      Session[]
  board         Board[]
  items         Item[]
  comments      Comment[]
  workspaces    Workspace[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Workspace {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  slug      String   @unique
  color     String   @default("#000000")

  users           User[]
  boards          Board[]
  MenuItem        MenuItem[]
  MenuCategory    MenuCategory[]
  TableModule     TableModule[]
  Story           Story[]
  InventoryModule InventoryModule[]
}

model TableModule {
  id             String           @id @default(cuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String
  slug           String           @unique
  tables         Table[]
  menuItems      MenuItem[]
  menuCategories MenuCategory[]
  stories        Story[]
  previousOrders PreviousOrders[]
  workspace      Workspace        @relation(fields: [workspaceId], references: [id])
  workspaceId    String           @unique
}

model Table {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  slug      String   @unique
  color     Colors   @default(OCEAN)
  icon      String
  chairs    Int      @default(0)

  orders         TableOrder[]
  TableModule    TableModule?     @relation(fields: [tableModuleId], references: [id])
  tableModuleId  String?
  story          Story?           @relation(fields: [storyId], references: [id])
  storyId        String?
  PreviousOrders PreviousOrders[]
}

model TableOrder {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String
  slug      String     @unique
  orders    MenuItem[]
  Table     Table?     @relation(fields: [tableId], references: [id])
  tableId   String?
}

model MenuItem {
  id               String          @id @default(cuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  name             String
  slug             String          @unique
  icon             String
  color            Colors          @default(OCEAN)
  order            Int
  price            Float           @default(0)
  description      String?
  menuImages       MenuImage[]
  workspace        Workspace       @relation(fields: [workspaceId], references: [id])
  workspaceId      String
  MenuCategory     MenuCategory?   @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId   String?
  TableOrder       TableOrder?     @relation(fields: [tableOrderId], references: [id])
  tableOrderId     String?
  TableModule      TableModule?    @relation(fields: [tableModuleId], references: [id])
  tableModuleId    String?
  PreviousOrders   PreviousOrders? @relation(fields: [previousOrdersId], references: [id])
  previousOrdersId String?
}

model MenuImage {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  image      String
  MenuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId String
}

model MenuCategory {
  id            String       @id @default(cuid())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  name          String
  slug          String       @unique
  order         Int
  workspace     Workspace    @relation(fields: [workspaceId], references: [id])
  workspaceId   String
  menuItems     MenuItem[]
  TableModule   TableModule? @relation(fields: [tableModuleId], references: [id])
  tableModuleId String?
}

model Story {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  slug      String   @unique

  TableModule   TableModule? @relation(fields: [tableModuleId], references: [id])
  tableModuleId String?
  tables        Table[]
  workspace     Workspace?   @relation(fields: [workspaceId], references: [id])
  workspaceId   String?
}

model PreviousOrders {
  id            String       @id @default(cuid())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  name          String
  slug          String       @unique
  orders        MenuItem[]
  table         Table?       @relation(fields: [tableId], references: [id])
  tableId       String?
  TableModule   TableModule? @relation(fields: [tableModuleId], references: [id])
  tableModuleId String?
}

model InventoryModule {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  slug        String    @unique
  color       Colors    @default(OCEAN)
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
}
